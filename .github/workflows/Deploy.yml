name: Deploy App # Build and Deploy Docker Image
on:
  push:
    branches:
      - main # Trigger the workflow on push to the only main branch
jobs:
  build_push:
    name: Build Docker Image
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub # Login to Docker Hub using Token of Docker Hub
        # This step is necessary to push the image to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Generate image tag (commit SHA) # Generate a short SHA for the image tag based on the commit SHA and save it as an environment variable
        run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV
      
      - name: Build Docker image # Using tag image from commit SHA
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/laravel-congress-app:${{ env.IMAGE_TAG }} .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/laravel-congress-app:${{ env.IMAGE_TAG }} \
                     ${{ secrets.DOCKERHUB_USERNAME }}/laravel-congress-app:latest
      
      - name: Push both tags to Docker Hub # Push both the commit SHA and latest tags to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/laravel-congress-app:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/laravel-congress-app:latest
      
      - name: Update Kubernetes manifests YAML # Update the Kubernetes manifests with the new image tag to be used in the deployment
        run: |
            sed -i "s|\(image: ${{ secrets.DOCKERHUB_USERNAME }}/laravel-congress-app:\).*|\1$IMAGE_TAG|" k8s/app/base/app/deployment.yaml
            sed -i "s|\(image: ${{ secrets.DOCKERHUB_USERNAME }}/laravel-congress-app:\).*|\1$IMAGE_TAG|" k8s/app/overlays/prod/patch-job.yaml
    
      - name: Commit and push updated manifests # Commit and push the updated manifests to the Git repository to trigger ArgoCD
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote set-url origin https://${{ secrets.DOCKERHUB_TOKEN }}@github.com/${{ github.repository }}
          git add k8s/app/base/app/deployment.yaml
          git add k8s/app/overlays/prod/patch-job.yaml            
          git commit -m "Auto update image tag to $IMAGE_TAG"
          git push origin HEAD:main
      